📘
  The Allegro package offers graphics, sounds and input APIs to create simple
  games.
📘

📗
  🎨 represents a color.
📗
🌍 🕊 🎨 🍇
  🖍🆕 r 💯
  🖍🆕 g 💯
  🖍🆕 b 💯
  🖍🆕 a 💯

  🆕 🍼 r 💯 🍼 g 💯 🍼 b 💯 🍼 a 💯 🍇🍉

  📗
    Creates a color from the given RGBA. *r*, *g*, *b* and *a* must be a value
    from 0 to 255.
  📗
  🆕 🔢 ri 🔢 gi 🔢 bi 🔢 ai 🔢 🍇
    💯ri❗️➗255 ➡️ 🖍r
    💯gi❗️➗255 ➡️ 🖍g
    💯bi❗️➗255 ➡️ 🖍b
    💯ai❗️➗255 ➡️ 🖍a
  🍉
🍉

📗 Errors 📗
🌍 🦃 🌩 🍇
  📗 Indicates a generic error. 📗
  🔘 🛑
  📗 Permission denied 📗
  🔘 🚧
  📗 File exists 📗
  🔘 🗿
  📗 Not enough space. 📗
  🔘 🐁
  📗 Function not supported. 📗
  🔘 🆘
  📗 Mathematics argument out of domain of function. 📗
  🔘 ⏺
  📗 Invalid argument. 📗
  🔘 🚯
  📗 Illegal byte sequence. 📗
  🔘 🛃
  📗 Result too large. 📗
  🔘 🗻
  📗 Operation not permitted. 📗
  🔘 🚷
🍉

📗 🖼 represents a bitmap. 📗
🌍 📻 🐇 🖼 🍇
  📗 Creates a bitmap from the image at the given path. 📗
  🆕 📄🚨🌩  path 🔡 📻 🔤allegroNewBitmapPath🔤
  📗 Creates a bitmap with the given height and width. 📗
  🆕 🚨🌩 width 🔢 height 🔢 📻 🔤allegroNewBitmapSize🔤
🍉

📜 🔤font.emojic🔤

📗 🎉 represents an event. You’ll always receive subclasses of this class. 📗
🌍 🐇 🎉 🍇🍉

📗 📩 is an event that occurs when a character was typed on the keyboard. 📗
🌍 📻 🐇 📩 🎉 🍇
  📗 Returns the keycode associated with this event. 📗
  ❗️ 📟 ➡️ 🔢 📻 🔤allegroKeyPressCode🔤

  📗
    Returns the character that was typed. No value is returned if the pressed
    key does not map to a character, e.g. if an arrow key was pressed.
  📗
  ❗️🔣 ➡️ 🍬🔡 📻 🔤allegroKeyPressString🔤

  📗 Whether the character was repeated. 📗
  ❗️ 🔃 ➡️ 👌 📻 🔤allegroKeyPressRepeated🔤
🍉

📗 📥 is an event that occurs when a keyboard key was pressed. 📗
🌍 📻 🐇 📥 🎉 🍇
  📗 Returns the keycode associated with this event. 📗
  ❗️ 📟 ➡️ 🔢 📻 🔤allegroKeyDownCode🔤
🍉

📗 📤 is an event that occurs when a keyboard key was released. 📗
🌍 📻 🐇 📤 🎉 🍇
  📗 Returns the keycode associated with this event. 📗
  ❗️ 📟 ➡️ 🔢 📻 🔤allegroKeyUpCode🔤
🍉

📗 🖱 is a mouse event. You’ll always receive subclasses of this class. 📗
🌍 🐇 🖱 🎉 🍇
  📗 Returns the x coordinate. 📗
  ❗️ ⏩ ➡️ 💯 📻 🔤allegroMouseEventX🔤
  📗 Returns the y coordinate. 📗
  ❗️ ⏬ ➡️ 💯 📻 🔤allegroMouseEventY🔤
🍉

📗 ❇️ is an event that occurs when one or more mouse axis changed. 📗
🌍 🐇 ❇️ 🖱 🍇
🍉

📗 🔛 is an event that occurs when a mouse button was pressed. 📗
🌍 🐇 🔛 🖱 🍇
🍉

📗 🔝 is an event that occurs when a mouse button was released. 📗
🌍 🐇 🔝 🖱 🍇
🍉

📗 🛎 is an event that occurs for each ⏲ tick. 📗
🌍 🐇 🛎 🎉 🍇
🍉

💭🔜
📗 ⏲ represents a timer that sends an event in a specified interval. 📗
🌍 🐇 ⏲ 🍇
  📗
    Creates a new, stopped timer that ticks every *seconds* seconds.
    Seconds must be positive.
  📗
  🆕 seconds 💯 📻 21
  📗
    Starts the timer. From then, the timer's counter will increment at a
    constant rate, and it will begin generating events. Starting a timer that
    is already started does nothing.
  📗
  ❗️ 🏁 📻 22
  📗
    Resume the timer specified. From then, the timer's counter will increment at
    a constant rate, and it will begin generating events. Resuming a timer
    that is already started does nothing. Resuming a stopped timer will not
    reset the timer's counter.
  📗
  ❗️ 🚦 📻 23
  📗
    Stop the timer specified. The timer's counter will stop incrementing and it
    will stop generating events. Stopping a timer that is already stopped does
    nothing.
  📗
  ❗️ ⛔️ 📻 24
🍉
🔚💭

🌍 🐇 ⏲ 🍇🍉

📗
  🗃 represents an event queue. An 🗃 instance holds events that have been
  generated by event sources that are registered with the queue. Events are
  stored in the order they are generated. Access is in a strictly FIFO
  (first-in-first-out) order.
📗
🌍 🐇 🗃 🍇
  📗 Creates a new, empty event queue. 📗
  🆕 📻 🔤allegroNewEventQueue🔤
  📗 Waits for an event and returns it. 📗
  ❗️ ⏳ ➡️ 🎉 📻 🔤allegroEventQueueWait🔤
  📗 Registers the mouse as an event source. 📗
  ❗️ 🖱 📻 🔤allegroEventQueueRegisterMouse🔤
  📗 Registers the keyboard as an event source. 📗
  ❗️ ⌨️ 📻 🔤allegroEventQueueRegisterKeyboard🔤
  📗 Registers a ⏲ instance as an event source. 📗
  ❗️ ⏲ timer ⏲ 📻 🔤allegroEventQueueRegisterTimer🔤
🍉

💭🔜
📗 🎶 represents an audio sample. 📗
🌍 🐇 🎶 🍇
  📗
    Loads the sample from the file at the given path. Depending on what
    libraries are available, the full set of recognised extensions is: .wav,
    .flac, .ogg, .it, .mod, .s3m, .xm.
  📗
  🆕 🚨🌩 📄 path 🔡 📻 30
  📗 Starts playing the sample. 📗
  ❗️ 🏁 volume 💯 pan 💯 speed 💯 📻 31
🍉

🔚💭

📜 🔤display.emojic🔤
📜 🔤app.emojic🔤

🔗
  🔤allegro🔤
  🔤allegro_color🔤
  🔤allegro_primitives🔤
  🔤allegro_image🔤
  🔤allegro_ttf🔤
  🔤allegro_acodec🔤
  🔤allegro_audio🔤
  🔤allegro_font🔤
🔗
